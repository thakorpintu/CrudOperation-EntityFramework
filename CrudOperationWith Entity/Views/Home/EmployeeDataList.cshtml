@model CrudOperationWith_Entity.Models.UserMaster

@{
    ViewBag.Title = "EmployeeDataList";
}

<h2>EmployeeDataList</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<!-- Button trigger modal -->
<button style="float:right;" type="button" class="btn btn-primary mb-3"  data-bs-toggle="modal" data-bs-target="#staticBackdrop">
    Add +
</button>


<table onload="Gride()" id="mytable" class="table table-bordered text-center table-hover table-responsive">
    <thead>

        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mobile)
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody></tbody>




</table>


<a href="#" data-toggle="modal" data-target="#staticBackdrop" >content</a>


<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Employee Registration</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("EmployeeDataCreate", "Home"))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.HiddenFor(m=>m.Id)
                        
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <label>
                                    @Html.RadioButtonFor(model => model.Gender,"Male", new { id = "mgn", htmlAttributes = new { @class = "form-control" } })
                                    Male
                                </label>
                                <label>
                                    @Html.RadioButtonFor(model => model.Gender,"Female", new { id="fgn",htmlAttributes = new { @class = "form-control" } })
                                    Female
                                </label>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button"  onclick="SaveData()" class="btn btn-primary">Save</button>
                        </div>           
                
            </div>
                }

        </div>
    </div>
</div>
                

<script src="~/Content/Myjsjs.js"></script>
<script type="text/javascript">


    //$(window).on('load', function () {
    //    console.log('All assets are loaded')
    //    FillData();

    //})
    $(document).ready(function() {
        FillData();

    })
 
    function FillData() {
        $.ajax({
            type: "Post",
            url: '@Url.Action("EmployeeDataList")',
            data: {},
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {

                console.log(retdata);
                var tbody = $("#mytable>tbody");
                debugger
                for (var i = 0; i < retdata.length; i++) {
                    tbody.append('<tr>' +

                    '<td>' + retdata[i].Id + '</td>' +
                    '<td>' + retdata[i].Name + '</td>' +
                    '<td>' + retdata[i].Email + '</td>' +
                    '<td>' + retdata[i].Password + '</td>' +
                    '<td>' + retdata[i].Gender + '</td>' +
                    '<td>' + retdata[i].Mobile + '</td>' +

                    '<td style="display: flex;"> <a type="button" data-bs-toggle="modal" data-bs-toggle="modal" onclick="EditData(' + retdata[i].Id + ')"    style="    margin-right: 3px;"     class = " btn btn-success"   >Edit</a>   <a onclick="DeletedData(' + retdata[i].Id + ')" class = " btn btn-danger" value="Delete"   >Delete</a> </td>' +


                    +'</tr>');

                }

                if (retdata == 1) {
                    alert("successfully added");
                }

            }


        })
    }

    function DeletedData(Id) {
        Id
        $.ajax({
            type: "Get",
            url: '@Url.Action("EmployeeDeleteData")',
            data: { Id: Id },
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {
                console.log(retdata);
                
                if (retdata>0)
                {
                    alert('succefully Delete Data');
                }

                
            }

        })
        FillData();
    }
        
    function EditData(Id) {

        debugger;
        Id
        $.ajax({
            type: "Get",
            url: '@Url.Action("EmployeeDataCreate")',
            data: { id:Id },
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {
                console.log(retdata);
                debugger
                $('#Id').val(retdata.Id);

                $('#Name').val(retdata.Name);
                $('#Email').val(retdata.Email);
                $('#Password').val(retdata.Password);
                if ($("#mgn").attr('checked', true)) {
                     $("#mgn").val();
                }
                else {
                     $("#fgn").val();

                }

            
                $('#Mobile').val(retdata.Mobile);


                $('#staticBackdrop').modal("show");

                return false;
            }

        })
    }

 
    function SaveData() {
        debugger;

        var gn = "";
        if ($("#mgn").attr('checked', true)) {
             gn = $("#mgn").val();
        }
        else {
             gn = $("#fgn").val();

        }
        var model = {
            Id:Id.value,
            Name: Name.value,
            Email: Email.value,
            Password: Password.value,
            Gender: gn,
            Mobile: Mobile.value

        };
        console.log(model);

        $.ajax({
            type: "Post",
            url: '@Url.Action("EmployeeDataCreate")',
            data: JSON.stringify(model),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {
                console.log(retdata);
                debugger
                




            }

        })
        $("#staticBackdrop").modal('hide');
        debugger
        FillData();

    }


</script>