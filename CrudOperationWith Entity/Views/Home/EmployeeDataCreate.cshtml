@model CrudOperationWith_Entity.Models.UserMaster

@{
    ViewBag.Title = "EmployeeDataCreate";
}

<h2>EmployeeDataCreate</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UserMaster</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.RadioButtonFor(model => model.Gender,"Male", new { htmlAttributes = new { @class = "form-control" } })
                    Male
                </label>
                <label>
                    @Html.RadioButtonFor(model => model.Gender,"Female", new { htmlAttributes = new { @class = "form-control" } })
                    Female
                </label>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" onclick="SaveData()"  value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "EmployeeDataList")
</div>
<script src="~/Content/Myjsjs.js"></script>
<script type="text/javascript">
    debugger


    function SaveData() {
        var model = {
            Name: Name.value,
            Email: Email.value,
            Password: Password.value,
            Gender: Gender.value,
            Mobile: Mobile.value

        };
        console.log(model);

        $.ajax({
            type: "Post",
            url: '@Url.Action("EmployeeDataCreate")',
            data: JSON.stringify(model),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {
                console.log(retdata);

            }

        })
    }
    


</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
